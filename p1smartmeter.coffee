serialport = require('serialport')
moment = require('moment')
fs = require('fs')
# TODO: change filename to date + name
currentDir = __dirname
datestamp = ''
dataDir = 'data'
writeStream = null
SerialPort = serialport.SerialPort
# localize object constructor
serialPort = new SerialPort('/dev/ttyUSB0',
  baudrate: 9600
  databits: 7
  parity: 'even'
  stopbits: 1
  xon: 0
  xoff: 0
  rtscts: 0
  parser: serialport.parsers.readline('!'))

getStringBetween = (data, charLeft, charRight) ->
  data.substring data.indexOf(charLeft) + 1, data.indexOf(charRight)

convertToIntegerValue = (value) ->
  parseInt value.replace(/\./, ''), 10

serialPort.on 'open', ->
  console.log 'Opened P1 port'
  serialPort.on 'data', (data) ->
    exportData = []
    timestamp = moment().unix()
    exportData.push timestamp
    #console.log(data);
    lines = data.split('\n')
    lines.forEach (line, i) ->
      # get meter type
      meterType = getStringBetween(line, ':', '(')
      # get meter value (valid for electricity consumption values)
      meterValue = getStringBetween(line, '(', '*')
      switch meterType
        when '1.8.1'
          #console.log("afgenomen_hoog\t" + meterValue);
          exportData.push convertToIntegerValue(meterValue)
        when '1.8.2'
          #console.log("afgenomen_laag\t" + meterValue);
          exportData.push convertToIntegerValue(meterValue)
        when '2.8.1'
          #console.log("geleverd_hoog\t" + meterValue);
          exportData.push convertToIntegerValue(meterValue)
        when '2.8.2'
          #console.log("geleverd_laag\t" + meterValue);
          exportData.push convertToIntegerValue(meterValue)
        when '96.14.0'
          meterValue = '' + getStringBetween(line, '(', ')')
          #console.log("actueel_tarief\t" + (meterValue === "0001" ? "laag" : "hoog"));
          exportData.push if meterValue == '0001' then 'l' else 'h'
        when '1.7.0'
          #console.log("huidig_verbruik\t" + meterValue);
          # *10 to convert current consumption in W
          exportData.push convertToIntegerValue(meterValue) * 10
        when '2.7.0'
          #console.log("huidig_levering\t" + meterValue);
          # *10 to convert current consumption in W
          exportData.push convertToIntegerValue(meterValue) * 10
        when '96.13.1'
          meterValue = getStringBetween(line, '(', ')')
          #console.log("bericht_num\t" + meterValue);
          exportData.push meterValue
        when '96.13.0'
          meterValue = getStringBetween(line, '(', ')')
          #console.log("bericht_tekst\t" + meterValue);
          exportData.push meterValue
        # unknown meter type
        #console.log("unknown: " + line);
      return
    #console.log(exportData);
    if exportData.length == 10
      # export only valid p1 messages (where we could find all our wanted information)
      # timestamp, 1.8.1, 1.8.2, 2.8.1, 2.8.2, 
      line = exportData.join(',')
      # TODO: write to rotated file
      currentDatestamp = moment().format('YYMMDD')
      if currentDatestamp > datestamp
        if writeStream
          writeStream.end()
        datestamp = currentDatestamp
        dir = currentDir + '/' + dataDir + '/' + datestamp + '_verbruik.csv'
        console.log 'writing to: ' + dir
        writeStream = fs.createWriteStream(dir, flags: 'a+')
      writeStream.write line + '\n'
    #       - sla op als csv (oid)
    return
  return
serialPort.on 'error', (data) ->
  console.log '@' + moment().format() + ': Error reading p1 port: ' + data
  return

# ---
# generated by js2coffee 2.0.4